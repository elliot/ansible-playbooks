---
- name: Add HAProxy PPA repository
  apt_repository: repo="ppa:vbernat/haproxy-1.5" state=present update_cache=yes

- name: Install HAProxy + socat
  apt: name={{ item }} state=latest
  with_items:
    - haproxy
    - socat

- name: Enable HAProxy 
  service: name=haproxy enabled=yes

- name: Ensure chroot directory exists
  file: name={{ haproxy_global.chroot }} state=directory
  when: haproxy_global.chroot is defined and haproxy_global.chroot

## Assemble Config - Frontends

- name: Create directory for the frontend
  file: path=/etc/haproxy/frontends.d state=directory

- name: Empty the folder if not already empty
  command: find /etc/haproxy/frontends.d -name *.cfg -exec rm -f {} \;

- name: Build up the frontends
  template: src=frontend.cfg dest=/etc/haproxy/frontends.d/{{ item.name }}.cfg
  with_items: haproxy_frontends
  when: haproxy_frontends is defined

## Assemble Config - Backends

- name: Create directory for the backends
  file: path=/etc/haproxy/backends.d state=directory

- name: Empty the folder if not already empty
  command: find /etc/haproxy/backends.d -name *.cfg -exec rm -f {} \;

- name: Build up the backends
  template: src=backend.cfg dest=/etc/haproxy/backends.d/{{ item.name }}.cfg
  with_items: haproxy_backends
  when: haproxy_backends is defined

## Assemble Config - Listens

- name: Create directory for the listen sections
  file: path=/etc/haproxy/listen.d state=directory

- name: Empty the folder if not already empty
  command: find /etc/haproxy/listen.d -name *.cfg -exec rm -f {} \;

- name: Build up the listen sections
  template: src=listen.cfg dest=/etc/haproxy/listen.d/{{ item.name }}.cfg
  with_items: haproxy_listen
  when: haproxy_listen is defined

## Assemble Config - User Lists

- name: Create directory for the userlists
  file: path=/etc/haproxy/userlists.d state=directory

- name: Empty the folder if not already empty
  command: find /etc/haproxy/userlists.d -name *.cfg -exec rm -f {} \;

- name: Build up the userlist sections
  template: src=userlist.cfg dest=/etc/haproxy/userlists.d/{{ item.name }}.cfg
  with_items: haproxy_userlists
  when: haproxy_userlists is defined

## Assemble Config - Globals + Defaults

- name: Create  the compiled folder
  file: path=/etc/haproxy/compiled state=directory

- name: Empty the folder if not already empty
  command: find /etc/haproxy/compiled -name *.cfg -exec rm -f {} \;

- name: Build up the global config
  template: src=global.cfg dest=/etc/haproxy/compiled/01-global.cfg
  when: haproxy_global is defined
  tags: 'test'

- name: Build up the default config
  template: src=defaults.cfg dest=/etc/haproxy/compiled/02-defaults.cfg
  when: haproxy_defaults is defined

## Assemble final config

- name: Assemble the frontends configuration file
  assemble: src=/etc/haproxy/frontends.d dest=/etc/haproxy/compiled/03-frontends.cfg

- name: Assemble the backends configuration file
  assemble: src=/etc/haproxy/backends.d dest=/etc/haproxy/compiled/04-backends.cfg

- name: Assemble the listen sections configuration file
  assemble: src=/etc/haproxy/listen.d dest=/etc/haproxy/compiled/05-listen.cfg

- name: Assemble the userlists sections configuration file
  assemble: src=/etc/haproxy/userlists.d dest=/etc/haproxy/compiled/06-userlists.cfg

- name: Assemble the final configuration file
  assemble: src=/etc/haproxy/compiled dest=/etc/haproxy/haproxy.cfg backup=yes
  notify: Restart HAProxy
